name: 'GitHub Action Atmos Component Updater'
description: 'GitHub Action Atmos Component Updater'
author: hello@cloudposse.com
branding:
  icon: 'server'
  color: 'white'
inputs:
  github-access-token:
    description: "GitHub token used to clone component repositories. It cannot be the autogenerated `GITHUB_TOKEN`."
    required: true
  infra-terraform-dirs:
    description: "CSV list of terraform directories in infra repo. For example 'components/terraform,components/terraform-old. Default 'components/terraform'"
    required: false
    default: 'components/terraform'
  skip-component-vendoring:
    description: "Do not perform 'atmos vendor component-name' on components that wasn't vendored"
    required: false
    default: 'false'
  max-number-of-prs:
    description: "Number of PRs to create. Maximum is 10."
    required: false
    default: '10'
  includes:
    description: "Comma or new line separated list of component names to include. For example: 'vpc,eks/*,rds'. By default all components are included. Default '*'"
    required: false
    default: '*'
  excludes:
    description: "Comma or new line separated list of component names to exclude. For example: 'vpc,eks/*,rds'. By default no components are excluded. Default ''"
    required: false
    default: ''
  log-level:
    description: "Log level for this action. Default 'INFO'"
    required: false
    default: 'INFO'
  dry-run:
    description: "Skip creation of remote branches and pull requests. Only print list of affected componented into file that is defined in 'outputs.affected-components-file'"
    required: false
    default: 'false'
outputs:
  affected:
    description: The affected components
    value: ${{ steps.affected.outputs.affected }}
  has-affected-stacks:
    description: Whether there are affected components
    value: ${{ steps.affected.outputs.affected != '[]' }}
runs:
  using: "composite"
  steps:
    - name: Checkout Infra Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Atmos
      uses: cloudposse/github-action-setup-atmos@v1.0.0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: "1.20"

    - name: Install Go Dependencies
      shell: bash
      run: |
        cd ${{ github.action_path }}
        go mod download
        go install github.com/hashicorp/go-getter/cmd/go-getter
        echo "GO_GETTER_TOOL=$(go env GOPATH)/bin/go-getter" >> "$GITHUB_ENV"

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python Dependencies
      shell: bash
      run: |
        cd ${{ github.action_path }}
        pip install -r src/requirements.txt

    - name: Run Atmos Component Updater
      shell: bash
      run: |
        cd ${{ github.action_path }}
        python src/main.py \
          --github-api-token ${{ inputs.github-access-token }} \
          --go-getter-tool ${{ env.GO_GETTER_TOOL }} \
          --infra-repo-name ${{ github.repository }} \
          --infra-repo-dir ${{ github.workspace }} \
          --infra-terraform-dirs ${{ inputs.infra-terraform-dirs }} \
          --skip-component-vendoring ${{ inputs.skip-component-vendoring }} \
          --max-number-of-prs ${{ inputs.max-number-of-prs }} \
          --includes "${{ inputs.includes }}" \
          --excludes "${{ inputs.excludes }}" \
          --log-level ${{ inputs.log-level }} \
          --dry-run ${{ inputs.dry-run }} \
          --affected-components-file 'affected-components.json'

    - name: Affected Components
      id: affected
      shell: bash
      run: |
        cd ${{ github.action_path }}
        cat affected-components.json
        affected=$(jq -c '.' < affected-components.json)
        echo "affected=$affected" >> $GITHUB_OUTPUT
